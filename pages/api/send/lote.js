import axios from "axios";
import { createClient } from "@supabase/supabase-js";

// Configura√ß√£o do Supabase
const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_API_KEY
);

export default async function handler(req, res) {
  // CORS
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "POST, GET, OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type");

  if (req.method === "OPTIONS") {
    res.status(200).end();
    return;
  }

  if (req.method !== "POST") {
    return res.status(405).json({ error: "M√©todo n√£o permitido" });
  }

  const { numeros, mensagem, tema } = req.body;
  console.log("üéØ Dados recebidos no body:", req.body);

  // Verifica√ß√£o dos par√¢metros
  if (!Array.isArray(numeros) || !mensagem || !tema) {
    return res.status(400).json({ error: "N√∫meros, mensagem e tema s√£o obrigat√≥rios" });
  }

  const instanceId = process.env.ULTRAMSG_INSTANCE_ID;
  const token = process.env.ULTRAMSG_TOKEN;
  const url = `https://api.ultramsg.com/${instanceId}/messages/chat`;

  let sucesso = 0;
  let falha = 0;
  let erros = [];

  // Envio das mensagens para os n√∫meros
  for (const numero of numeros) {
    try {
      const response = await axios.post(url, {
        token,
        to: numero,
        body: mensagem,
      });

      if (response.data?.sent === "true" || response.data?.message === "ok") {
        sucesso++;
      } else {
        falha++;
        erros.push({ numero, resposta: response.data });
      }
    } catch (error) {
      falha++;
      erros.push({ numero, erro: error.response?.data || error.message });
    }
  }

  // Log para depurar dados da campanha
  console.log("üì§ Campanha enviada para:", numeros);
  console.log("üí¨ Mensagem:", mensagem);
  console.log("üè∑Ô∏è Tema:", tema);

  // ‚õî Supabase temporariamente desativado para testes
  console.log("üì¶ Simula√ß√£o: campanha n√£o salva no Supabase (modo de teste)");

  // Resposta com o status da campanha (sem salvar no Supabase)
  return res.status(200).json({
    status: "Campanha finalizada (teste sem Supabase)",
    sucesso,
    falha,
    erros,
  });
}
